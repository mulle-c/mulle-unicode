# This file will be regenerated by `mulle-match-to-cmake` via
# `mulle-sde reflect` and any edits will be lost.
#
# This file will be included by cmake/share/Headers.cmake
#
if( MULLE_TRACE_INCLUDE)
   MESSAGE( STATUS "# Include \"${CMAKE_CURRENT_LIST_FILE}\"" )
endif()

#
# contents are derived from the file locations

set( INCLUDE_DIRS
src
src/reflect
src/unicode
)

#
# contents selected with patternfile ??-header--private-generated-headers
#
set( PRIVATE_GENERATED_HEADERS
src/reflect/_mulle-unicode-include-private.h
)

#
# contents selected with patternfile ??-header--private-generic-headers
#
set( PRIVATE_GENERIC_HEADERS
src/include-private.h
)

#
# contents selected with patternfile ??-header--public-generated-headers
#
set( PUBLIC_GENERATED_HEADERS
src/reflect/_mulle-unicode-include.h
src/reflect/_mulle-unicode-versioncheck.h
)

#
# contents selected with patternfile ??-header--public-generic-headers
#
set( PUBLIC_GENERIC_HEADERS
src/include.h
)

#
# contents selected with patternfile ??-header--public-headers
#
set( PUBLIC_HEADERS
src/mulle-unicode-ctype.h
src/mulle-unicode.h
src/mulle-unicode-is-alphanumeric.h
src/mulle-unicode-is-capitalized.h
src/mulle-unicode-is-control.h
src/mulle-unicode-is-decimaldigit.h
src/mulle-unicode-is-decomposable.h
src/mulle-unicode-is-legalcharacter.h
src/mulle-unicode-is-letter.h
src/mulle-unicode-is-lowercase.h
src/mulle-unicode-is-newline.h
src/mulle-unicode-is-nonbase.h
src/mulle-unicode-is-noncharacter.h
src/mulle-unicode-is-punctuation.h
src/mulle-unicode-is-symbol.h
src/mulle-unicode-is-uppercase.h
src/mulle-unicode-is-whitespace.h
src/mulle-unicode-is-whitespaceornewline.h
src/mulle-unicode-is-zerodigit.h
src/mulle-unicode-tolower.h
src/mulle-unicode-toupper.h
src/unicode/isalphanumeric-bitmap.inc
src/unicode/iscapitalized-bitmap.inc
src/unicode/iscapitalized-utf16.inc
src/unicode/iscontrol-utf16.inc
src/unicode/iscontrol-utf32.inc
src/unicode/isdecimaldigit-utf16.inc
src/unicode/isdecimaldigit-utf32.inc
src/unicode/isdecomposable-bitmap.inc
src/unicode/isdecomposable-utf16.inc
src/unicode/isdecomposable-utf32.inc
src/unicode/isdigit-utf16.inc
src/unicode/isdigit-utf32.inc
src/unicode/islegal-bitmap.inc
src/unicode/islegal-utf16.inc
src/unicode/islegal-utf32.inc
src/unicode/isletter-bitmap.inc
src/unicode/islowercase-bitmap.inc
src/unicode/islowercase-utf16.inc
src/unicode/islowercase-utf32.inc
src/unicode/isnonbase-bitmap.inc
src/unicode/isnonbase-utf16.inc
src/unicode/isnonbase-utf32.inc
src/unicode/isnumeric-utf16.inc
src/unicode/isnumeric-utf32.inc
src/unicode/isprivate-utf16.inc
src/unicode/isprivate-utf32.inc
src/unicode/ispunctuation-bitmap.inc
src/unicode/ispunctuation-utf16.inc
src/unicode/ispunctuation-utf32.inc
src/unicode/isseparator-utf16.inc
src/unicode/issymbol-bitmap.inc
src/unicode/issymbol-utf16.inc
src/unicode/issymbol-utf32.inc
src/unicode/isuppercase-bitmap.inc
src/unicode/isuppercase-utf16.inc
src/unicode/isuppercase-utf32.inc
src/unicode/iswhitespace-utf16.inc
src/unicode/iszerodigit-utf16.inc
src/unicode/iszerodigit-utf32.inc
src/unicode/miniplane.h
src/unicode/tolower-utf16.inc
src/unicode/tolower-utf32.inc
src/unicode/totitlecase-utf16.inc
src/unicode/totitlecase-utf32.inc
src/unicode/toupper-utf16.inc
src/unicode/toupper-utf32.inc
)

